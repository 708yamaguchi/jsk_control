#!/usr/bin/env python

# set up parameters that we care about
PACKAGE = 'jsk_footstep_planner'

try:
    import imp
    imp.find_module(PACKAGE)
    from dynamic_reconfigure.parameter_generator_catkin import *;
except:
    import roslib; roslib.load_manifest(PACKAGE)
    from dynamic_reconfigure.parameter_generator import *;

from math import pi

gen = ParameterGenerator ()
gen.add("use_pointcloud_model", bool_t, 0, "", False)
gen.add("use_lazy_perception", bool_t, 0, "", False)
gen.add("use_local_movement", bool_t, 0, "", False)
gen.add("project_start_state", bool_t, 0, "", False)
gen.add("project_goal_state", bool_t, 0, "", False)
gen.add("resolution_x", double_t, 0, "", 0.05, 0.01, 1.0)
gen.add("resolution_y", double_t, 0, "", 0.05, 0.01, 1.0)
gen.add("resolution_theta", double_t, 0, "", 0.08, 0.01, pi)
gen.add("footstep_size_x", double_t, 0, "", 0.24, 0.01, 1.0)
gen.add("footstep_size_y", double_t, 0, "", 0.15, 0.01, 1.0)
gen.add("close_list_x_num", int_t, 0, "", 100, 1, 1024)
gen.add("close_list_y_num", int_t, 0, "", 100, 1, 1024)
gen.add("close_list_theta_num", int_t, 0, "", 100, 1, 1024)
gen.add("profile_period", int_t, 0, "", 1024, 1, 10240)
heuristic_enum = gen.enum([gen.const("step_cost", str_t, "step_cost", "step_cost"),
                           gen.const("zero", str_t, "zero", "zero"),
                           gen.const("straight", str_t, "straight", "straight"),
                           gen.const("straight_rotation", str_t, "straight_rotation", "straight_rotation")],
                          "heuristic")
gen.add("heuristic", str_t, 0, "", "step_cost", edit_method=heuristic_enum)
gen.add("heuristic_first_rotation_weight", double_t, 0, "", 1.0, 0.0, 10.0)
gen.add("heuristic_second_rotation_weight", double_t, 0, "", 1.0, 0.0, 10.0)
exit (gen.generate (PACKAGE, "jsk_footstep_planner", "FootstepPlanner"))
